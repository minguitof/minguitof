name: üõ†Ô∏è Actualizar README autom√°ticamente

on:
  schedule:
    - cron: '0 0 * * *'   # todos los d√≠as a medianoche UTC
  workflow_dispatch:

permissions:
  contents: write   # üîë Esto le da permiso al bot para hacer push

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Es buena pr√°ctica pasar expl√≠citamente el token para asegurar permisos en el checkout
          token: ${{ secrets.GITHUB_TOKEN }} 

      - name: Instalar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Instalar dependencias
        run: |
          pip install requests
          pip install Pillow 

      - name: Ejecutar script
        run: python converter.py
        env:
          # ¬°CORRECCI√ìN AQU√ç! Aseg√∫rate de que el nombre de la variable coincida con lo que tu script espera.
          # Tu script espera 'GITHUB_TOKEN', no 'GH_TOKEN'.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      - name: Hacer commit si hay cambios
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # ¬°CORRECCI√ìN AQU√ç! A√±ade tambi√©n el archivo SVG a los cambios.
          git add README.md readme_profile.svg 
          
          # Comitea solo si hay cambios en los archivos a√±adidos
          git diff --cached --quiet || git commit -m "üîÑ Actualizaci√≥n autom√°tica del README"
          
          # Configura la URL remota con el token para autenticar el push
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          
          # Finalmente, sube los cambios
          git push
